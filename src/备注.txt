工厂方法模式：
一个抽象产品类，可以派生出多个具体产品类。   
一个抽象工厂类，可以派生出多个具体工厂类。   
每个具体工厂类只能创建一个具体产品类的实例。

抽象工厂模式：
多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。   
一个抽象工厂类，可以派生出多个具体工厂类。   
每个具体工厂类可以创建多个具体产品类的实例。   
    
区别：
工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个。   
工厂方法模式的具体工厂类只能创建一个具体产品类的实例，而抽象工厂模式可以创建多个。 

工厂方法模式应用场景：
1.类不知道自己要创建哪一个对象
2.类用它的子类来指定创建哪个对象
3.客户需要清楚创建了哪一个对象

抽象工厂模式：
1.系统需要屏蔽有关对象如何创建、如何组织和如何表示
2.系统需要由关联的多个对象来构成
3.有关联的多个对象需要一起应用并且他们的约束是强迫的（不可分离）
4.你提供一组对象而不显示它们的实现过程，只显示它们的接口。

